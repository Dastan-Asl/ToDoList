{"version":3,"sources":["App.js","index.js"],"names":["Functional","state","value","tasks","handleAddTask","task","text","completed","arr","setState","handleToggleTask","e","index","check","target","checked","p","alignItems","spacing","borderWidth","borderRadius","id","this","onChange","placeholder","disabled","length","onClick","bg","map","backgroundColor","size","flex","fontSize","React","Component","ReactDOM","render","App","document","getElementById"],"mappings":"+QAwFeA,E,4MA1EbC,MAAQ,CACNC,MAAO,GACPC,MAAO,I,EAGTC,cAAgB,WACd,IAAMC,EAAO,CACXC,KAAM,EAAKL,MAAMC,MACjBK,WAAW,GAEPC,EAAG,sBAAO,EAAKP,MAAME,OAAlB,CAAyBE,IAClC,EAAKI,SAAS,CAAEN,MAAOK,EAAKN,MAAO,M,EAGrCQ,iBAAmB,SAACC,EAAGC,GACrB,IAAMC,EAAQF,EAAEG,OAAOC,QACjBP,EAAG,YAAO,EAAKP,MAAME,OAC3BK,EAAII,GAAOL,UAAYM,EACvB,EAAKJ,SAAS,CAAEN,MAAOK,K,4CAGzB,WAAU,IAAD,OACP,OACE,cAAC,IAAD,CAAKQ,EAAG,GAAR,SACE,eAAC,IAAD,CAAQC,WAAW,UAAUC,QAAS,EAAtC,UACE,cAAC,IAAD,CAAKC,YAAa,EAAGH,EAAG,EAAGI,aAAa,KAAxC,SACE,eAAC,IAAD,CAAaC,GAAG,OAAhB,UACE,cAAC,IAAD,sCACA,eAAC,IAAD,WACE,cAAC,IAAD,CACEnB,MAAOoB,KAAKrB,MAAMC,MAClBqB,SAAU,SAACZ,GAAD,OAAO,EAAKF,SAAS,CAAEP,MAAOS,EAAEG,OAAOZ,SACjDsB,YAAY,sBAEd,cAAC,IAAD,CACEC,SAAsC,IAA5BH,KAAKrB,MAAMC,MAAMwB,OAC3BC,QAASL,KAAKlB,cAFhB,4BASN,cAAC,IAAD,CAAKe,YAAa,EAAGH,EAAG,EAAGI,aAAa,KAAKQ,GAAG,WAAhD,SACE,cAAC,IAAD,CAAQX,WAAW,UAAnB,SACGK,KAAKrB,MAAME,MAAM0B,KAAI,SAACxB,EAAMO,GAC3B,OACE,cAAC,IAAD,CAEEO,YAAY,MACZW,gBAAgB,QAChBV,aAAa,KACbJ,EAAG,EALL,SAOE,eAAC,IAAD,CAAQE,QAAS,EAAjB,UACE,cAAC,IAAD,CACEa,KAAK,KACLR,SAAU,SAACZ,GAAD,OAAO,EAAKD,iBAAiBC,EAAGC,MAE5C,cAAC,IAAD,CAAMoB,KAAK,IAAIC,SAAS,KAAxB,SACG5B,EAAKC,WAZLM,mB,GAjDAsB,IAAMC,W,SCP/BC,IAASC,OACP,cAAC,IAAD,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b401d0d9.chunk.js","sourcesContent":["import React from \"react\";\nimport {\n  Box,\n  VStack,\n  FormControl,\n  FormLabel,\n  HStack,\n  Input,\n  Button,\n  Checkbox,\n  Text,\n} from \"@chakra-ui/react\";\n\nclass Functional extends React.Component {\n  state = {\n    value: \"\",\n    tasks: [],\n  };\n\n  handleAddTask = () => {\n    const task = {\n      text: this.state.value,\n      completed: false,\n    };\n    const arr = [...this.state.tasks, task];\n    this.setState({ tasks: arr, value: \"\" });\n  };\n\n  handleToggleTask = (e, index) => {\n    const check = e.target.checked;\n    const arr = [...this.state.tasks];\n    arr[index].completed = check;\n    this.setState({ tasks: arr });\n  };\n\n  render() {\n    return (\n      <Box p={20}>\n        <VStack alignItems=\"stretch\" spacing={5}>\n          <Box borderWidth={1} p={5} borderRadius=\"lg\">\n            <FormControl id=\"todo\">\n              <FormLabel>What do you want to do?</FormLabel>\n              <HStack>\n                <Input\n                  value={this.state.value}\n                  onChange={(e) => this.setState({ value: e.target.value })}\n                  placeholder=\"Your next task...\"\n                />\n                <Button\n                  disabled={this.state.value.length === 0}\n                  onClick={this.handleAddTask}\n                >\n                  Submit\n                </Button>\n              </HStack>\n            </FormControl>\n          </Box>\n          <Box borderWidth={1} p={5} borderRadius=\"lg\" bg=\"gray.100\">\n            <VStack alignItems=\"stretch\">\n              {this.state.tasks.map((task, index) => {\n                return (\n                  <Box\n                    key={index}\n                    borderWidth=\"1px\"\n                    backgroundColor=\"white\"\n                    borderRadius=\"lg\"\n                    p={3}\n                  >\n                    <HStack spacing={3}>\n                      <Checkbox\n                        size=\"lg\"\n                        onChange={(e) => this.handleToggleTask(e, index)}\n                      />\n                      <Text flex=\"1\" fontSize=\"lg\">\n                        {task.text}\n                      </Text>\n                    </HStack>\n                  </Box>\n                );\n              })}\n            </VStack>\n          </Box>\n        </VStack>\n      </Box>\n    );\n  }\n}\n\nexport default Functional;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}